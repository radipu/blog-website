@model List<FAQs>

<!DOCTYPE html>
<html lang="en">
  <head>
      <link rel="stylesheet" href="~/css/style_1.css" />
  </head>

    <body>
        <div class="container-fluid pt-5">
            <h2>Frequently Asked Questions</h2>
            <div class="accordionDD" id="faqContainer">
                @if (Model != null && Model.Any())
                {
                    int index = 1;
                    @foreach (var faq in Model)
                    {
                        <div class="accordionDD-item">
                            <button id="accordionDD-button-@index" aria-expanded="false">
                                <span class="accordionDD-title">@faq.FAQuestion</span>
                                <span class="icon" aria-hidden="true"></span>
                            </button>
                            <div class="accordionDD-content">
                                <p>@faq.FAQanswer</p>
                            </div>
                        </div>
                        index++;
                    }
                }
                else
                {
                    <p>No FAQs available.</p>
                }
            </div>
        
            <!-- Centered hyperlink -->
            <div class="text-center mt-3">
                <a href="javascript:void(0);" id="toggleQuestionForm">Didn't find your question?</a>
            </div>

            <!-- Hidden question form, initially hidden -->
            <div id="questionForm" class="mt-3" style="display: none;">
                <div class="text-center">
                    <input type="text" id="userQuestion" class="form-control" style="width: 50%; margin: 0 auto; text-align:center" placeholder="Ask your question" />
                </div>
                <!-- Error message box -->
                <div id="errorMessage" class="alert alert-danger text-center mt-2" style="display: none;"></div>
                <div class="text-center mt-2">
                    <button id="submitQuestion" class="btn btn-primary">Submit</button>
                </div>
            </div>
        
            <!-- Hidden confirmation message -->
            <div id="confirmationMessage" class="text-center mt-3" style="display: none;">
                <p>Your question has been asked and will be answered shortly. Please check the FAQ for the answer.</p>
            </div>
        </div>

        <script>
            // Accordion functionality
            const items = document.querySelectorAll('.accordionDD button');

            function toggleAccordion() {
                const itemToggle = this.getAttribute('aria-expanded');
                items.forEach(item => item.setAttribute('aria-expanded', 'false'));
                if (itemToggle === 'false') {
                    this.setAttribute('aria-expanded', 'true');
                }
            }
            items.forEach(item => item.addEventListener('click', toggleAccordion));

            // Toggle display of the question form when hyperlink is clicked
            document.getElementById('toggleQuestionForm').addEventListener('click', function() {
                // Hide confirmation and error messages when toggling the form
                document.getElementById('confirmationMessage').style.display = 'none';
                document.getElementById('errorMessage').style.display = 'none';
                var form = document.getElementById('questionForm');
                form.style.display = (form.style.display === 'none' || form.style.display === '') ? 'block' : 'none';
            });

            // Submit question functionality with validation
            document.getElementById('submitQuestion').addEventListener('click', function() {
                const questionInput = document.getElementById('userQuestion');
                const questionText = questionInput.value.trim();
                const errorMessage = document.getElementById('errorMessage');

                if (questionText === "") {
                    errorMessage.textContent = "Please enter your question before submitting.";
                    errorMessage.style.display = 'block';
                    return;
                }

                // AJAX call to save question
                fetch('@Url.Action("SubmitQuestion", "FAQ")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ FAQuestion: questionText })
                })
                .then(response => {
                    if (!response.ok) throw new Error('Network response was not ok');
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        questionInput.value = "";
                        errorMessage.style.display = 'none';
                        document.getElementById('questionForm').style.display = 'none';
                        document.getElementById('confirmationMessage').style.display = 'block';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    errorMessage.textContent = 'Error submitting question: ' + error.message;
                    errorMessage.style.display = 'block';
                });
            });
        </script>
    </body>
</html>